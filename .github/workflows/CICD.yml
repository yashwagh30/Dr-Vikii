name: CI CD Pipeline - DrViki

on:
  push:
    branches: [ main ]

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/drviki-app:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/drviki-app:latest
          docker image ls

      - name: Run container and test /health
        run: |
          # Run the container
          docker run -d --name drviki-ci -p 8088:8088 $IMAGE_NAME
          sleep 15
          # Test the health endpoint with retries
          for i in {1..10}; do
            if curl -f http://localhost:8088/health; then
              echo "Health check passed!"
              break
            fi
            echo "Health check attempt $i failed, retrying..."
            sleep 5
          done
          # Stop and remove container
          docker rm -f drviki-ci

      - name: Push image to DockerHub
        run: |
          docker push $IMAGE_NAME
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/drviki-app:latest

      - name: Check if SSH deployment is configured
        id: check_ssh
        run: |
          if [ -n "${{ secrets.SSH_HOST }}" ] && [ -n "${{ secrets.SSH_USER }}" ] && [ -n "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "ssh_configured=true" >> $GITHUB_OUTPUT
          else
            echo "ssh_configured=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to remote host via SSH
        if: steps.check_ssh.outputs.ssh_configured == 'true'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/drviki-app:latest
            
            # Stop and remove existing container
            docker stop drviki-app || true
            docker rm -f drviki-app || true
            
            # Run new container
            docker run -d \
              --name drviki-app \
              -p 8088:8088 \
              --restart unless-stopped \
              ${{ secrets.DOCKERHUB_USERNAME }}/drviki-app:latest
            
            # Verify the container is running
            echo "Current running containers:"
            docker ps
            
            # Wait a moment and check health
            sleep 10
            curl -f http://localhost:8088/health || echo "Health check failed but container is running"
